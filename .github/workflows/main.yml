---
name: main
on:
  push:
    branches-ignore:
      - release
  pull_request:
    branches-ignore:
      - release

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    continue-on-error: ${{ matrix.build_cmd != './build-latest.sh' }}
    strategy:
      matrix:
        build_cmd:
          - ./build-latest.sh
          - PRERELEASE=true ./build-latest.sh
          - ./build.sh main
        os:
          - ubuntu-latest
          # - macos-latest
      fail-fast: false
    env:
      GH_ACTION: enable
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      IMAGE_NAMES: docker.io/peeringmanager/peering-manager
    runs-on: ${{ matrix.os }}
    name: Build new Peering Manager Docker images
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx-setup
        uses: docker/setup-buildx-action@v3
      # - name: Set BUILDX_PLATFORM to ARM64
      #   if: matrix.os == 'macos-latest'
      #   run: echo "BUILDX_PLATFORM=linux/arm64" >>"${GITHUB_ENV}"
      - name: Build the image for '${{ matrix.os }}' with '${{ matrix.build_cmd }}'
        id: docker-build
        run: ${{ matrix.build_cmd }}
        env:
          BUILDX_BUILDER_NAME: ${{ steps.buildx-setup.outputs.name }}
      - name: Set Peering Manager container start_period higher on ARM64
        if: matrix.os == 'macos-latest'
        run: echo "PEERINGMANAGER_START_PERIOD=240s" >>"${GITHUB_ENV}"
      - name: Test the image
        run: IMAGE="${FINAL_DOCKER_TAG}" ./test.sh
        if: steps.docker-build.outputs.skipped != 'true'
